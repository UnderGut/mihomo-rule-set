#!/bin/bash

set -e

OUTPUT_DIR="dist"
SOURCES_FILE="sources.list"
TEMP_DIR="temp_work"

echo "--- Cleaning up old files ---"
rm -rf "$OUTPUT_DIR" "$TEMP_DIR"
mkdir -p "$OUTPUT_DIR" "$TEMP_DIR"

if [ ! -f "$SOURCES_FILE" ]; then
    echo "Error: Sources file '$SOURCES_FILE' not found!"
    exit 1
fi

while IFS= read -r line; do
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    [[ -z "$line" || "$line" =~ ^# ]] && continue

    # –§–æ—Ä–º–∞—Ç: ruletype,url ‚Äî –Ω–æ ruletype –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º –∏–ª–∏ "-"
    IFS=',' read -r ruletype url <<< "$line"
    url=$(echo "$url" | xargs) # —É–±—Ä–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã

    source_filename=$(basename "$url")
    rule_name="${source_filename%.*}"
    extension="${source_filename##*.}"

    echo "Processing: $source_filename (declared type: '$ruletype')"

    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    curl -L -s -o "$TEMP_DIR/$source_filename" "$url"

    if [[ "$extension" == "mrs" ]]; then
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ .mrs
        detected_type=$(grep '^type:' "$TEMP_DIR/$source_filename" | head -1 | awk '{print $2}')
        echo "Detected type inside .mrs: $detected_type"
        # –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ruletype –∏–∑ .mrs
        ruletype="$detected_type"

        # –ü—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É–µ–º .mrs –≤ dist/
        cp "$TEMP_DIR/$source_filename" "$OUTPUT_DIR/$rule_name.mrs"
        echo "Copied .mrs file to $OUTPUT_DIR/$rule_name.mrs"

    else
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è domain –∏ ipcidr –∏ –¥—Ä.
        if [[ "$ruletype" == "ipcidr" ]]; then
            mihomo convert-ruleset ipcidr text "$TEMP_DIR/$source_filename" "$OUTPUT_DIR/$rule_name.mrs"
            echo "‚úÖ Converted IP list to $OUTPUT_DIR/$rule_name.mrs"

        elif [[ "$ruletype" == "domain" ]]; then
            temp_yaml="$TEMP_DIR/$rule_name.yaml"
            echo "payload:" > "$temp_yaml"
            grep -v -E '^(#|$|!)' "$TEMP_DIR/$source_filename" | sed "s/.*/  - '&'/" >> "$temp_yaml"
            mihomo convert-ruleset domain yaml "$temp_yaml" "$OUTPUT_DIR/$rule_name.mrs"
            echo "‚úÖ Converted domain list to $OUTPUT_DIR/$rule_name.mrs"

        else
            echo "‚ö†Ô∏è WARNING: Unknown rule type '$ruletype' for $url. Skipping."
        fi
    fi

    echo "-------------------------------------"

done < "$SOURCES_FILE"

echo "--- Cleaning up temporary files ---"
rm -rf "$TEMP_DIR"

echo "üéâ Build finished successfully."
