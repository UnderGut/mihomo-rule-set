#!/bin/bash
set -e

OUTPUT_DIR="dist"
SOURCES_FILE="sources.list"
TEMP_DIR="temp_work"

echo "--- Cleaning up old files ---"
rm -rf "$OUTPUT_DIR"
mkdir -p "$OUTPUT_DIR"
rm -rf "$TEMP_DIR"
mkdir -p "$TEMP_DIR"

if [ ! -f "$SOURCES_FILE" ]; then
    echo "Error: Sources file not found at '$SOURCES_FILE'!"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ IP –∏–ª–∏ CIDR
is_ipcidr() {
    local line="$1"
    # –ü—Ä–æ—Å—Ç–æ–π regex –¥–ª—è IPv4, —Å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –º–∞—Å–∫–æ–º
    if [[ $line =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}(/[0-9]{1,2})?$ ]]; then
        return 0
    fi
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω—ã–º —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º
process_file() {
    local filepath="$1"
    local rule_name="$2"

    # –§–∞–π–ª—ã –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
    local ip_file="$TEMP_DIR/${rule_name}_ip.txt"
    local domain_file="$TEMP_DIR/${rule_name}_domain.txt"

    # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª—ã
    > "$ip_file"
    > "$domain_file"

    # –†–∞–∑–¥–µ–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ –ø–æ —Ç–∏–ø—É
    while IFS= read -r line; do
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
        [[ -z "$line" || "$line" =~ ^[#\!].* ]] && continue

        if is_ipcidr "$line"; then
            echo "$line" >> "$ip_file"
        else
            echo "$line" >> "$domain_file"
        fi
    done < "$filepath"

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º IP —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø—É—Å—Ç–æ–π
    if [ -s "$ip_file" ]; then
        echo "Converting IP list for $rule_name"
        mihomo convert-ruleset ipcidr text "$ip_file" "$OUTPUT_DIR/${rule_name}_ip.mrs"
        echo "‚úÖ Converted IP list to $OUTPUT_DIR/${rule_name}_ip.mrs"
    fi

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º domain —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø—É—Å—Ç–æ–π
    if [ -s "$domain_file" ]; then
        echo "Converting domain list for $rule_name"
        local temp_yaml="$TEMP_DIR/${rule_name}_domain.yaml"
        echo "payload:" > "$temp_yaml"
        grep -v -E '^(#|$|!)' "$domain_file" | sed "s/.*/  - '&'/" >> "$temp_yaml"
        mihomo convert-ruleset domain yaml "$temp_yaml" "$OUTPUT_DIR/${rule_name}_domain.mrs"
        echo "‚úÖ Converted domain list to $OUTPUT_DIR/${rule_name}_domain.mrs"
    fi
}

echo "--- Starting build process ---"
while IFS= read -r line; do
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    [[ -z "$line" || "$line" == \#* ]] && continue

    # –†–∞–∑–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—É: –æ–∂–∏–¥–∞–µ–º URL (–±–µ–∑ —Ç–∏–ø–∞ ‚Äî –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ)
    url="$line"
    source_filename=$(basename "$url")
    rule_name="${source_filename%.*}"

    echo "Processing rule: $rule_name"
    echo "Downloading $url ..."
    curl -L -s -o "$TEMP_DIR/$source_filename" "$url"

    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º
    process_file "$TEMP_DIR/$source_filename" "$rule_name"

    echo "-------------------------------------"

done < "$SOURCES_FILE"

echo "--- Cleaning up temporary files ---"
rm -rf "$TEMP_DIR"

echo "üéâ Build process finished successfully."
